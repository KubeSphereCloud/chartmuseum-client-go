// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostAPIChartsParams creates a new PostAPIChartsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAPIChartsParams() *PostAPIChartsParams {
	return &PostAPIChartsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPIChartsParamsWithTimeout creates a new PostAPIChartsParams object
// with the ability to set a timeout on a request.
func NewPostAPIChartsParamsWithTimeout(timeout time.Duration) *PostAPIChartsParams {
	return &PostAPIChartsParams{
		timeout: timeout,
	}
}

// NewPostAPIChartsParamsWithContext creates a new PostAPIChartsParams object
// with the ability to set a context for a request.
func NewPostAPIChartsParamsWithContext(ctx context.Context) *PostAPIChartsParams {
	return &PostAPIChartsParams{
		Context: ctx,
	}
}

// NewPostAPIChartsParamsWithHTTPClient creates a new PostAPIChartsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAPIChartsParamsWithHTTPClient(client *http.Client) *PostAPIChartsParams {
	return &PostAPIChartsParams{
		HTTPClient: client,
	}
}

/*
PostAPIChartsParams contains all the parameters to send to the API endpoint

	for the post API charts operation.

	Typically these are written to a http.Request.
*/
type PostAPIChartsParams struct {

	/* Chart.

	   chart package file
	*/
	Chart runtime.NamedReadCloser

	/* Force.

	   force upload
	*/
	Force bool

	/* Prov.

	   prov file
	*/
	Prov runtime.NamedReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post API charts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPIChartsParams) WithDefaults() *PostAPIChartsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post API charts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAPIChartsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post API charts params
func (o *PostAPIChartsParams) WithTimeout(timeout time.Duration) *PostAPIChartsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API charts params
func (o *PostAPIChartsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API charts params
func (o *PostAPIChartsParams) WithContext(ctx context.Context) *PostAPIChartsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API charts params
func (o *PostAPIChartsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API charts params
func (o *PostAPIChartsParams) WithHTTPClient(client *http.Client) *PostAPIChartsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API charts params
func (o *PostAPIChartsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChart adds the chart to the post API charts params
func (o *PostAPIChartsParams) WithChart(chart runtime.NamedReadCloser) *PostAPIChartsParams {
	o.SetChart(chart)
	return o
}

// SetChart adds the chart to the post API charts params
func (o *PostAPIChartsParams) SetChart(chart runtime.NamedReadCloser) {
	o.Chart = chart
}

// WithForce adds the force to the post API charts params
func (o *PostAPIChartsParams) WithForce(force bool) *PostAPIChartsParams {
	o.SetForce(force)
	return o
}

// SetForce adds the force to the post API charts params
func (o *PostAPIChartsParams) SetForce(force bool) {
	o.Force = force
}

// WithProv adds the prov to the post API charts params
func (o *PostAPIChartsParams) WithProv(prov runtime.NamedReadCloser) *PostAPIChartsParams {
	o.SetProv(prov)
	return o
}

// SetProv adds the prov to the post API charts params
func (o *PostAPIChartsParams) SetProv(prov runtime.NamedReadCloser) {
	o.Prov = prov
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPIChartsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Chart != nil {

		if o.Chart != nil {
			// form file param chart
			if err := r.SetFileParam("chart", o.Chart); err != nil {
				return err
			}
		}
	}

	// query param force
	qrForce := o.Force
	qForce := swag.FormatBool(qrForce)
	if qForce != "" {

		if err := r.SetQueryParam("force", qForce); err != nil {
			return err
		}
	}

	if o.Prov != nil {

		if o.Prov != nil {
			// form file param prov
			if err := r.SetFileParam("prov", o.Prov); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
